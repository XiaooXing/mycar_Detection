from sklearn import svm
from sklearn.model_selection import train_test_split
from sklearn.metrics import classification_report
from sklearn.datasets import load_sample_image
import numpy as np
import matplotlib.pyplot as plt

# 加载示例图像
china = load_sample_image('china.jpg')
# 裁剪为正方形以便处理
cut_china = china[:427,:427,:] #[427,427,3]

# 将图像像素值归一化到0到1之间
X = cut_china / 255.0
# 获取图像每个像素点的标签（前景或背景）
y = np.zeros((427,427))
y[100:300, 100:300] = 1

# 将数据集分为训练集和测试集
X_train, X_test, y_train, y_test = train_test_split(X.reshape(-1,3), y.reshape(-1), test_size=0.3)

# 创建SVM分类器
clf = svm.SVC(kernel='linear', C=1.0)
# 训练SVM分类器
clf.fit(X_train, y_train)
# 在测试集上进行预测
y_pred = clf.predict(X_test)

# 打印分类报告
print(classification_report(y_test, y_pred))

# 对整个图像进行分类
labels = clf.predict(X.reshape(-1,3))
# 重新将标签转换为图像形状
labels = labels.reshape(cut_china.shape[:2])

# 可视化分割结果
fig, axes = plt.subplots(1, 2, figsize=(10, 5))
axes[0].imshow(cut_china)
axes[0].set_title('Original Image')
axes[1].imshow(labels)
axes[1].set_title('Segmented Image')
plt.show()
